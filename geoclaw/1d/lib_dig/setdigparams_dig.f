      subroutine setdigparams
      implicit double precision (a-h,o-z)
      character*25 fname
      logical foundFile

      include "digparamsdec.i"
      include "digparamscommon.i"

      deg2rad = 3.14159d0/180.d0

      fname = 'setdebris.data'
      inquire(file=fname,exist=foundFile)
      if (.not. foundFile) then
        write(*,*) 'You must provide a file ', fname
        write(*,*) 'file can be generated by setrun.py'
        write(*,*) '>> python setrun.py'
        stop
      endif

      iunit = 8
      call opendatafile(iunit, fname)
      read(iunit,*) rho_s
      read(iunit,*) rho_f
      read(iunit,*) grav
      read(iunit,*) phi_bed
      phi_bed = deg2rad*phi_bed
      read(iunit,*) phi_int
      phi_int = deg2rad*phi_int
      read(iunit,*) delta
      read(iunit,*) kappita
      read(iunit,*) mu
      read(iunit,*) alpha
      read(iunit,*) m_crit
      read(iunit,*) m_min
      read(iunit,*) m_eqn0
      read(iunit,*) c1
      read(iunit,*) c2
      read(iunit,*) m0
      read(iunit,*) dudx_eps
      read(iunit,*) dry_tol
      read(iunit,*) phys_tol
      close(unit=iunit)
      smallu = 1.d-6


      fname = 'setflume.data'
      inquire(file=fname,exist=foundFile)
      if (.not. foundFile) then
        write(*,*) 'You must provide a file ', fname
        write(*,*) 'file can be generated by setrun.py'
        write(*,*) '>> python setrun.py'
        stop
      endif

      iunit = 9
      call opendatafile(iunit, fname)

      read(iunit,*) theta1
      theta1 = deg2rad*theta1
      read(iunit,*) theta2
      theta2 = deg2rad*theta2
      read(iunit,*) flumerad
      read(iunit,*) flumelen
      read(iunit,*) hopperlen
      read(iunit,*) hmax
      read(iunit,*) hoppertop
      read(iunit,*) hopperangle
      hopperangle = deg2rad*hopperangle
      close(unit=iunit)

      fname = 'setinit.data'
      init_ptype = 0
      p_initialized = 1
      init_htype = 0
      inquire(file=fname,exist=foundFile)
      if (foundFile) then
         iunit = 10
         call opendatafile(iunit,fname)
         read(iunit,*) init_htype
         read(iunit,*) init_ptype
         read(iunit,*) init_pmax_ratio
         read(iunit,*) init_ptf
         if (init_ptype.gt.0) p_initialized = 0
         close(unit=iunit)
      endif

      i_S =1
      i_rho = 2
      i_tanpsi = 3
      i_D = 5
      i_tau = 6
      i_kappa = 7
      i_phi = 8
      i_sigbed = 9
      i_theta = 10
      i_kperm = 11
      i_alpha = 12
      i_topo = 13

      return
      end
